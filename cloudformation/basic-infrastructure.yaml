AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Creates ECR, roles, reserves Elastic IPs
#Parameters:
# TODO: customize names with NODE_ENV

# TODO: limit associate address to a certain namespace
Resources:
  ORBSNetworkAssociateAddressPolicy:
    Type: "AWS::IAM::Policy"
    Properties: 
      PolicyDocument: 
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "VisualEditor0",
              "Effect": "Allow",
              "Action": "ec2:AssociateAddress",
              "Resource": "*"
            }
          ]
        }
      PolicyName: !Join ["-", ["AssociateAddressPolicy", !Ref "AWS::Region"]]
      Roles:
        - !Ref ORBSNetworkRole

  ORBSNetworkS3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Join ["-", ["orbs-network-config-staging", !Ref "AWS::Region"]]

  # TODO: only give access to region bucket
  ORBSNetworkAccessS3Policy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "VisualEditor0",
              "Effect": "Allow",
              "Action": [
                "s3:PutObject",
                "s3:GetObject",
                "s3:AbortMultipartUpload",
                "s3:ListBucket",
                "s3:DeleteObject",
                "s3:GetBucketLocation",
                "s3:GetObjectVersion"
              ],
              "Resource": [
                "arn:aws:s3:::orbs-network-config-staging*",
                "arn:aws:s3:::orbs-network-config-staging*/*"
              ]
            },
            {
              "Sid": "VisualEditor1",
              "Effect": "Allow",
              "Action": [
                "s3:ListAllMyBuckets",
                "s3:HeadBucket",
                "s3:ListObjects"
              ],
              "Resource": "*"
            }
          ]
        }
      PolicyName: !Join ["-", ["AccessS3Policy", !Ref "AWS::Region"]]
      Roles:
        - !Ref ORBSNetworkRole

  ORBSNetworkRole:
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument:
        {
          "Version" : "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": {
                "Service": [ "ec2.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          } ]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy 
      RoleName: !Join ["-", ["orbs-network-role", !Ref "AWS::Region"]]

  ORBSNetworkInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - !Ref ORBSNetworkRole
      InstanceProfileName: !Join ["-", ["orbs-network-instance-profile", !Ref "AWS::Region"]]

  ORBSRepository:
    Type: "AWS::ECR::Repository"
    Properties: 
      RepositoryName: !Join ["-", ["orbs-network", !Ref "AWS::Region"]]

  ORBSNodeElasticIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc

  # TODO: add condition, customize zone
  ORBSNodeDomainName:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: orbs-test.com.
      Name: !Join [".", [!Ref "AWS::Region", "global.nodes.orbs-test.com."]]
      Type: A
      TTL: 900
      ResourceRecords:
        - !Ref ORBSNodeElasticIP

Outputs:
  ORBSNetworkRole:
    Value: !Ref ORBSNetworkRole
    Export:
      Name: !Join ["-", ["orbs-network-role", !Ref "AWS::Region"]]

  ORBSNetworkInstanceProfile:
    Value: !Ref ORBSNetworkInstanceProfile
    Export:
      Name: !Join ["-", ["orbs-network-instance-profile", !Ref "AWS::Region"]]

  ORBSRepository:
    Value: !Join [ ".", [ !Ref "AWS::AccountId", "dkr.ecr", !Ref "AWS::Region", !Join [ "/", [ "amazonaws.com", !Ref ORBSRepository ] ] ] ]
    Export:
      Name: !Join ["-", ["orbs-repository", !Ref "AWS::Region"]]

  ORBSNodeElasticIP:
    Value: !GetAtt ORBSNodeElasticIP.AllocationId
    Export:
      Name: !Join ["-", ["orbs-node-elastic-ip", !Ref "AWS::Region"]]

  ORBSNodeDomainName:
    Value: !Ref ORBSNodeDomainName
    Export:
      Name: !Join ["-", ["orbs-node-domain-name", !Ref "AWS::Region"]]

  ORBSNetworkS3Bucket:
    Value: !Ref ORBSNetworkS3Bucket
    Export:
      Name: !Join ["-", ["orbs-network-s3-bucket", !Ref "AWS::Region"]]

  TemplateVersion:
    Description: The version of the template used by ORBS
    Value: '1.0.0'
